#logger.conf
###############################################
[loggers]
keys=root
encode=utf-8

[handlers]
keys=consoleHandler,fileHandler

[formatters]
keys=simpleFormatter

[logger_root]
level=INFO
handlers=consoleHandler,fileHandler


[handler_consoleHandler] #输出到控制台的handler
class=StreamHandler
formatter=simpleFormatter
args=(sys.stdout,)

[handler_fileHandler] #输出到日志文件的handler
#class=handlers.TimedRotatingFileHandler
class=handlers.RotatingFileHandler
formatter=simpleFormatter
#args=('../PythonLog/PythonRunningLog.log', 'M', 10, 20)
args=('../PythonLog/PythonRunningLog.log', 'a', 10*1024*1024, 20)

[formatter_simpleFormatter]
format=%(asctime)s  %(filename)s[line:%(lineno)d] %(levelname)s %(message)s [pid:%(process)d] [threadname:%(threadName)s] [thread:%(thread)d]
datefmt=%a, %d %b %Y %H:%M:%S




#默认情况下日志级别为WARNING
#日志级别大小关系为：CRITICAL > ERROR > WARNING > INFO > DEBUG > NOTSET
#如果把looger的级别设置为INFO,那么小于INFO级别的日志都不输出,大于等于INFO级别的日志都输出
#logging.basicConfig函数各参数:
#filename: 指定日志文件名
#filemode: 和file函数意义相同，指定日志文件的打开模式，'w'或'a'
#format: 指定输出的格式和内容，format可以输出很多有用信息，如上例所示:
#%(levelno)s: 打印日志级别的数值
#%(levelname)s: 打印日志级别名称
#%(pathname)s: 打印当前执行程序的路径，其实就是sys.argv[0]
#%(filename)s: 打印当前执行程序名
#%(funcName)s: 打印日志的当前函数
#%(lineno)d: 打印日志的当前行号
#%(asctime)s: 打印日志的时间
#%(thread)d: 打印线程ID
#%(threadName)s: 打印线程名称
#%(process)d: 打印进程ID
#%(message)s: 打印日志信息
#datefmt: 指定时间格式，同time.strftime()
#level: 设置日志级别，默认为logging.WARNING
#stream: 指定将日志的输出流，可以指定输出到sys.stderr,sys.stdout或者文件，默认输出到sys.stderr，当stream和filename同时指定时,stream被忽略
